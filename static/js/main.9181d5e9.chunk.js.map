{"version":3,"sources":["component/Search.js","component/Nav.js","component/BoardListEntry.js","component/BoardList.js","App.js","index.js"],"names":["Search","setbBoards","useState","search","setSearch","onSubmitHandleClick","e","a","preventDefault","fetch","method","then","res","json","console","log","data","results","catch","err","onSubmit","Container","Table","striped","bordered","hover","Navbar","bg","expand","Brand","className","type","placeholder","value","onChange","target","variant","Nav","BoardListEntry","boards","Row","Col","xs","md","id","title","created_at","BoardList","useEffect","map","App","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4UAqEeA,EAxDA,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EACLC,mBAAS,IADJ,mBAC1BC,EAD0B,KAClBC,EADkB,KA0B3BC,EAAmB,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sDAE1BD,EAAEE,iBAlBFC,MAFa,iFAEE,kBAmBJN,GAnByB,CAClCO,OAAQ,QAEPC,MAAK,SAACC,GAEL,OAAOA,EAAIC,UAEZF,MAAK,SAACC,GACLE,QAAQC,IAAI,iCAASH,EAAII,KAAKC,SAC9BhB,EAAWW,EAAII,KAAKC,YAErBC,OAAM,SAACC,GACNL,QAAQC,IAAI,MAAOI,MAIG,2CAAH,sDAOzB,OACE,0BAAMC,SAAUf,GACd,kBAACgB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,GAC3B,kBAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,MACxB,kBAACF,EAAA,EAAOG,MAAR,2BACA,kBAAC,IAAD,CAAKC,UAAU,YACf,6BACE,2BACEC,KAAK,OACLC,YAAY,0DACZC,MAAO9B,EACP+B,SA1CY,SAAC5B,GAEzBF,EAAUE,EAAE6B,OAAOF,UA0CT,2BAAOG,QAAQ,kBAAkBL,KAAK,SAASE,MAAM,uBChDpDI,EARH,SAAC,GAAD,IAAGpC,EAAH,EAAGA,WAAH,OACV,6BACE,6BACE,kBAAC,EAAD,CAAQA,WAAYA,O,eCsBXqC,EArBQ,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAExB,OACE,6BACE,kBAAClB,EAAA,EAAD,KACE,kBAACmB,EAAA,EAAD,CAAKA,KAAG,EAACV,UAAU,6BACjB,kBAACW,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACd,4BAAKJ,EAAOK,KAEd,kBAACH,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACbJ,EAAOM,OAEV,kBAACJ,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACbJ,EAAOO,gBCsFLC,G,MA9FG,SAAC,GAA4B,IAA1BR,EAAyB,EAAzBA,OAAQtC,EAAiB,EAAjBA,WA2B3B,OANA+C,qBAAU,WAhBRvC,MAFa,iFAEI,CACfC,OAAQ,QAEPC,MAAK,SAACC,GACL,OAAOA,EAAIC,UAEZF,MAAK,SAACC,GACLE,QAAQC,IAAI,yCAAYH,EAAII,MAC5Bf,EAAWW,EAAII,KAAKC,YAGrBC,OAAM,SAACC,GACNL,QAAQC,IAAI,MAAOI,QAOtB,IAID,6BACE,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,GAC3B,+BACE,4BACE,4BACE,kBAACe,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GAAhB,gBAGA,kBAACF,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GAAhB,gBAGA,kBAACF,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GAAhB,0BAOR,+BACE,4BACGJ,EAAOU,KAAI,SAACV,GAAD,OACV,kBAAC,EAAD,CAAgBA,OAAQA,cC5CzBW,EAdH,WAAO,IAAD,EACahD,mBAAS,IADtB,mBACTqC,EADS,KACDtC,EADC,KAIhB,OACE,yBAAK6B,UAAU,OACb,8DACA,kBAAC,EAAD,CAAK7B,WAAYA,IACjB,kBAAC,EAAD,CAAWsC,OAAQA,EAAQtC,WAAYA,IACvC,sCAAOsC,EAAOY,OAAd,qC,MCRNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.9181d5e9.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n// import { searchTour } from \"../searchTour\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Table from \"react-bootstrap/Table\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\n\n// 검색 기능\n// 주제별 검색 기능\n// 총 몇건의 게시글을 표시\nconst Search = ({ setbBoards }) => {\n  const [search, setSearch] = useState(\"\");\n\n  const searchHandleClick = (e) => {\n    // console.log(\"search word\", search);\n    setSearch(e.target.value);\n  };\n\n  const BOARD_URL = `http://tourlive-code-test-1586978259.ap-northeast-2.elb.amazonaws.com/v1/tours`;\n  const searchTour = (key) => {\n    fetch(BOARD_URL + `?search=${key}`, {\n      method: \"GET\",\n    })\n      .then((res) => {\n        // console.log(\"response search\", res);\n        return res.json();\n      })\n      .then((res) => {\n        console.log(\"검색데이터\", res.data.results);\n        setbBoards(res.data.results);\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n      });\n  };\n\n  const onSubmitHandleClick = async (e) => {\n    // console.log(\"검색어: \", search);\n    e.preventDefault();\n    searchTour(search);\n    // await setbBoards(searchTour(\"스페인\"));\n  };\n\n  return (\n    <form onSubmit={onSubmitHandleClick}>\n      <Container>\n        <Table striped bordered hover>\n          <Navbar bg=\"light\" expand=\"lg\">\n            <Navbar.Brand>게시판</Navbar.Brand>\n            <Nav className=\"mr-auto\"></Nav>\n            <div>\n              <input\n                type=\"text\"\n                placeholder=\"검색어를 입력하세요\"\n                value={search}\n                onChange={searchHandleClick}\n              />\n              <input variant=\"outline-success\" type=\"submit\" value=\"검색\" />\n            </div>\n          </Navbar>\n        </Table>\n      </Container>\n    </form>\n  );\n};\n\nexport default Search;\n\n{\n  /* <NavDropdown title=\"검색\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item href=\"#action/3.1\">제목</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">주제</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">닉네임</NavDropdown.Item>\n            </NavDropdown> */\n}\n","import React from \"react\";\n\nimport Search from \"./Search\";\n\nconst Nav = ({ setbBoards }) => (\n  <nav>\n    <div>\n      <Search setbBoards={setbBoards} />\n    </div>\n  </nav>\n);\n\nexport default Nav;\n","import React from \"react\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Container from \"react-bootstrap/Container\";\n// import Table from \"react-bootstrap/Table\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nconst BoardListEntry = ({ boards }) => {\n  // console.log(\"boards의 title =>> \", boards.title);\n  return (\n    <div>\n      <Container>\n        <Row Row className=\"justify-content-md-center\">\n          <Col xs={6} md={1}>\n            <tr>{boards.id}</tr>\n          </Col>\n          <Col xs={6} md={7}>\n            {boards.title}\n          </Col>\n          <Col xs={6} md={4}>\n            {boards.created_at}\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default BoardListEntry;\n\n//   const boardList = boards.map((data) => (\n//     <li key={data.results}>{data.results}</li>\n// return <ul>{boardList}</ul>;\n//   ));\n","import React, { useState, useEffect } from \"react\";\n\nimport BoardListEntry from \"./BoardListEntry\";\nimport { searchBoard } from \"../searchTour\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Table from \"react-bootstrap/Table\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\n// 게시판 글 나열, map을 활용하여 뿌려주기\n// 게시글 상단 표시: 번호 / 제목 / 첨부파일 / 작성일 / 조회수\nconst BoardList = ({ boards, setbBoards }) => {\n  // const [boards, setbBoards] = useState([]);\n\n  const BOARD_URL = `http://tourlive-code-test-1586978259.ap-northeast-2.elb.amazonaws.com/v1/tours`;\n  const searchBoard = () => {\n    fetch(BOARD_URL, {\n      method: \"GET\",\n    })\n      .then((res) => {\n        return res.json();\n      })\n      .then((res) => {\n        console.log(\"이거 뭐나오지?\", res.data);\n        setbBoards(res.data.results);\n        // console.log(\"boards 이거 다른거\", boards);\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n      });\n  };\n\n  useEffect(() => {\n    searchBoard();\n    // console.log(\"searchBoard 작동되니\", boards); >> 빈배열 나옴\n  }, []);\n  // console.log(\"searchBoard 받아오는가 봐라\", boards);\n\n  return (\n    <div>\n      <Container>\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <td>\n                <Row>\n                  <Col xs={6} md={1}>\n                    번호\n                  </Col>\n                  <Col xs={6} md={7}>\n                    제목\n                  </Col>\n                  <Col xs={6} md={4}>\n                    작성일\n                  </Col>\n                </Row>\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              {boards.map((boards) => (\n                <BoardListEntry boards={boards} />\n              ))}\n            </tr>\n          </tbody>\n        </Table>\n      </Container>\n    </div>\n  );\n};\n// const fetchInitialData = async () => {\n//   const initialData = await searchBoard();\n//   setbBoards(initialData);\n//   console.log(\"initialData\", searchBoard());\n//   console.log(\"fetchInitialData\");\n// };\n/*\n// useEffect에 비동기를 적용하고, 데이터를 완전히 받오면 상태를 변경\n  // 리렌더 발생하게 리팩토링\n  useEffect(async () => {\n    try {\n      const initialData = await searchBoard();\n      console.log(\"새로운 내용이 렌더링\");\n      setbBoards(initialData);\n    } catch (err) {\n      console.log(err);\n    }\n  }, []);\n*/\n\n/*\n{searchAPI() === undefined ? <div>없음<div> : </div>searchAPI().results.map((title) => {\n          return <BoardListEntry key={title} />\n        })}\n*/\n/*\n{lists.map((list) => (\n        <BoardListEntry\n          key={list}\n          video={list}\n          handleVideoListEntryTitleClick={handleBoardListEntryTitleClick}\n        />\n      ))}\n*/\nexport default BoardList;\n\n// const TOUR_URL = \"http://tourlive-code-test-1586978259.ap-northeast-2.elb.amazonaws.com/v2/tours\";\n// const url = `http://${process.env.REACT_APP_SERVER_HOST}:${process.env.REACT_APP_SERVER_PORT}/v2/tours`\n\n/*\nhost: http://tourlive-code-test-1586978259.ap-northeast-2.elb.amazonaws.com\nAPI URL: /v2/tours\nEX URL: http://tourlive-code-test-1586978259.ap-northeast-2.elb.amazonaws.com/v2/tours\nAction Type: List, Retreive\nAllowed Method: GET\nNot Allow Method: POST, PATCH, PUT, DELETE\n*/\n\n/*\n* Query parameters\nsearch: 검색 (text)\nordering: 정렬 (text)\npage_size: 페이지 사이즈 (int)\ncursor:  hash 커서 (text)\n*/\n\n/*\n* curl example (리스트 * List)\ncurl http://tourlive-code-test-1586978259.ap-northeast-2.elb.amazonaws.com/v2/tours\ncurl http://tourlive-code-test-1586978259.ap-northeast-2.elb.amazonaws.com/v2/tours?search=일본\ncurl http://tourlive-code-test-1586978259.ap-northeast-2.elb.amazonaws.com/v2/tours?search=오키나와\ncurl http://tourlive-code-test-1586978259.ap-northeast-2.elb.amazonaws.com/v2/tours?ordering=-created_at\ncurl http://tourlive-code-test-1586978259.ap-northeast-2.elb.amazonaws.com/v2/tours?cursor=cD0yMDIwLTA5LTE0KzA0JTNBNTclM0ExMCUyQjAwJTNBMDA%3D\n*/\n\n/*\n* curl example (상세 * Detail)\ncurl http://tourlive-code-test-1586978259.ap-northeast-2.elb.amazonaws.com/v2/tours/1\n*/\n","import React, { useState } from \"react\";\nimport \"./App.css\";\n\nimport Nav from \"./component/Nav\";\nimport BoardList from \"./component/BoardList\";\n\nconst App = () => {\n  const [boards, setbBoards] = useState([]);\n  // console.log(\"app에서 사용하네\", boards);\n\n  return (\n    <div className=\"App\">\n      <h1>투어라이브</h1>\n      <Nav setbBoards={setbBoards} />\n      <BoardList boards={boards} setbBoards={setbBoards} />\n      <h7>총 {boards.length}개의 게시글</h7>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}