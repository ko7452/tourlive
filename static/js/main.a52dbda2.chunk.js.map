{"version":3,"sources":["component/Search.js","component/Nav.js","component/BoardListEntry.js","component/BoardList.js","component/Board.js","component/BoardHome.js","App.js","index.js"],"names":["Search","setbBoards","useState","search","setSearch","onSubmitHandleClick","e","a","preventDefault","fetch","method","mode","header","then","res","json","console","log","data","results","catch","err","onSubmit","Container","Table","striped","bordered","hover","Navbar","bg","expand","Brand","className","type","placeholder","value","onChange","target","variant","Nav","BoardListEntry","boards","Row","Col","xs","md","id","to","pathname","query","title","created_at","substring","BoardList","useEffect","rsults","map","ListGroup","Item","action","length","Board","history","onClick","push","BoardHome","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a52dbda2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n// import { searchTour } from \"../searchTour\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Table from \"react-bootstrap/Table\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\n\n// 검색 기능\n// 주제별 검색 기능\n// 총 몇건의 게시글을 표시\nconst Search = ({ setbBoards }) => {\n  const [search, setSearch] = useState(\"\");\n\n  const searchHandleClick = (e) => {\n    // console.log(\"search word\", search);\n    setSearch(e.target.value);\n  };\n\n  const BOARD_URL = `http://tourlive-code-test-1586978259.ap-northeast-2.elb.amazonaws.com/v1/tours`;\n  const searchTour = (key) => {\n    fetch(BOARD_URL + `?search=${key}`, {\n      method: \"GET\", // GET, POST, PUT, DELETE, etc.\n      mode: \"cors\",\n      header: {\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    })\n      .then((res) => {\n        // console.log(\"response search\", res);\n        return res.json();\n      })\n      .then((res) => {\n        console.log(\"검색데이터\", res.data.results);\n        setbBoards(res.data.results);\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n      });\n  };\n\n  const onSubmitHandleClick = async (e) => {\n    // console.log(\"검색어: \", search);\n    e.preventDefault();\n    searchTour(search);\n    // await setbBoards(searchTour(\"스페인\"));\n  };\n\n  return (\n    <div>\n      <h1>투어라이브</h1>\n      <form onSubmit={onSubmitHandleClick}>\n        <Container>\n          <Table striped bordered hover>\n            <Navbar bg=\"Danger\" expand=\"lg\">\n              <Navbar.Brand>게시판</Navbar.Brand>\n              <Nav className=\"mr-auto\"></Nav>\n              <div>\n                <input\n                  type=\"text\"\n                  placeholder=\"검색어를 입력하세요\"\n                  value={search}\n                  onChange={searchHandleClick}\n                />\n                <input variant=\"outline-success\" type=\"submit\" value=\"검색\" />\n              </div>\n            </Navbar>\n          </Table>\n        </Container>\n      </form>\n    </div>\n  );\n};\n\nexport default Search;\n\n{\n  /* <NavDropdown title=\"검색\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item href=\"#action/3.1\">제목</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">주제</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">닉네임</NavDropdown.Item>\n            </NavDropdown> */\n}\n","import React from \"react\";\n\nimport Search from \"./Search\";\n\nconst Nav = ({ setbBoards }) => (\n  <nav>\n    <div>\n      <Search setbBoards={setbBoards} />\n    </div>\n  </nav>\n);\n\nexport default Nav;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n// import ListGroup from \"react-bootstrap/ListGroup\";\n// import ListGroup from \"react-bootstrap/ListGroup\";\n// import Breadcrumb from \"react-bootstrap/Breadcrumb\";\n// import Table from \"react-bootstrap/Table\";\n\nconst BoardListEntry = ({ boards }) => {\n  console.log(\"boards의 title =>> \", boards);\n  return (\n    <div>\n      <Container>\n        <Row Row className=\"justify-content-md-center\">\n          <Col xs={6} md={1}>\n            {boards.id}\n          </Col>\n          <Col xs={6} md={8}>\n            <NavLink\n              to={{ pathname: \"/board\", query: { title: boards.title } }}\n            >\n              {boards.title}\n            </NavLink>\n          </Col>\n          <Col xs={6} md={3}>\n            {boards.created_at.substring(0, 10)}\n            {/* 날짜만 나올 수 있도록  substring() */}\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default BoardListEntry;\n\n//   const boardList = boards.map((data) => (\n//     <li key={data.results}>{data.results}</li>\n// return <ul>{boardList}</ul>;\n//   ));\n","import React, { useEffect } from \"react\";\n// import ReactPaginate from \"react-paginate\";\n\nimport BoardListEntry from \"./BoardListEntry\";\n// import Board from \"./Board\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Table from \"react-bootstrap/Table\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\n// 게시판 글 나열, map을 활용하여 뿌려주기\n// 게시글 상단 표시: 번호 / 제목 / 첨부파일 / 작성일 / 조회수\nconst BoardList = ({ boards, setbBoards }) => {\n  // const [pageSize, setPageSize] = useState(5);\n\n  const BOARD_URL = `http://tourlive-code-test-1586978259.ap-northeast-2.elb.amazonaws.com/v1/tours`;\n  const searchBoard = () => {\n    fetch(BOARD_URL, {\n      method: \"GET\", // GET, POST, PUT, DELETE, etc.\n      mode: \"cors\",\n      header: {\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    })\n      .then((res) => {\n        return res.json();\n      })\n      .then((res) => {\n        console.log(\"이거 뭐나오지?\", res.data.rsults);\n        setbBoards(res.data.results);\n        // console.log(\"boards 이거 다른거\", boards);\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n      });\n  };\n\n  useEffect(() => {\n    searchBoard();\n    // console.log(\"searchBoard 작동되니\", boards); >> 빈배열 나옴\n  }, []);\n  console.log(\"searchBoard 받아오는가 봐라\", boards);\n  /*\n  const boardHandleClick = () => {\n    // history.push(\"/board\");\n    console.log(\"history\", history);\n    // console.log(\"boardHandleClick\");\n  };\n   */\n  return (\n    <div>\n      <Container>\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <td>\n                <Row>\n                  <Col xs={6} md={1}>\n                    번호\n                  </Col>\n                  <Col xs={6} md={7}>\n                    제목\n                  </Col>\n                  <Col xs={6} md={4}>\n                    작성일\n                  </Col>\n                </Row>\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              {boards.map((boards) => (\n                <ListGroup>\n                  <ListGroup.Item action>\n                    <BoardListEntry boards={boards} />\n                  </ListGroup.Item>\n                </ListGroup>\n              ))}\n            </tr>\n          </tbody>\n        </Table>\n      </Container>\n      <h7>총 [{boards.length}]개의 게시글</h7>\n    </div>\n  );\n};\n\nexport default BoardList;\n// const fetchInitialData = async () => {\n//   const initialData = await searchBoard();\n//   setbBoards(initialData);\n//   console.log(\"initialData\", searchBoard());\n//   console.log(\"fetchInitialData\");\n// };\n/*\n// useEffect에 비동기를 적용하고, 데이터를 완전히 받오면 상태를 변경\n  // 리렌더 발생하게 리팩토링\n  useEffect(async () => {\n    try {\n      const initialData = await searchBoard();\n      console.log(\"새로운 내용이 렌더링\");\n      setbBoards(initialData);\n    } catch (err) {\n      console.log(err);\n    }\n  }, []);\n*/\n\n/*\n{searchAPI() === undefined ? <div>없음<div> : </div>searchAPI().results.map((title) => {\n          return <BoardListEntry key={title} />\n        })}\n*/\n/*\n{lists.map((list) => (\n        <BoardListEntry\n          key={list}\n          video={list}\n          handleVideoListEntryTitleClick={handleBoardListEntryTitleClick}\n        />\n      ))}\n*/\n\n// const TOUR_URL = \"http://tourlive-code-test-1586978259.ap-northeast-2.elb.amazonaws.com/v2/tours\";\n// const url = `http://${process.env.REACT_APP_SERVER_HOST}:${process.env.REACT_APP_SERVER_PORT}/v2/tours`\n\n/*\nhost: http://tourlive-code-test-1586978259.ap-northeast-2.elb.amazonaws.com\nAPI URL: /v2/tours\nEX URL: http://tourlive-code-test-1586978259.ap-northeast-2.elb.amazonaws.com/v2/tours\nAction Type: List, Retreive\nAllowed Method: GET\nNot Allow Method: POST, PATCH, PUT, DELETE\n*/\n\n/*\n* Query parameters\nsearch: 검색 (text)\nordering: 정렬 (text)\npage_size: 페이지 사이즈 (int)\ncursor:  hash 커서 (text)\n*/\n\n/*\n* curl example (리스트 * List)\ncurl http://tourlive-code-test-1586978259.ap-northeast-2.elb.amazonaws.com/v2/tours\ncurl http://tourlive-code-test-1586978259.ap-northeast-2.elb.amazonaws.com/v2/tours?search=일본\ncurl http://tourlive-code-test-1586978259.ap-northeast-2.elb.amazonaws.com/v2/tours?search=오키나와\ncurl http://tourlive-code-test-1586978259.ap-northeast-2.elb.amazonaws.com/v2/tours?ordering=-created_at\ncurl http://tourlive-code-test-1586978259.ap-northeast-2.elb.amazonaws.com/v2/tours?cursor=cD0yMDIwLTA5LTE0KzA0JTNBNTclM0ExMCUyQjAwJTNBMDA%3D\n*/\n\n/*\n* curl example (상세 * Detail)\ncurl http://tourlive-code-test-1586978259.ap-northeast-2.elb.amazonaws.com/v2/tours/1\n*/\n","import React from \"react\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Table from \"react-bootstrap/Table\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nconst Board = ({ history, boards }) => {\n  // 게시글의 내용을 보여줍니다\n  const homeButton = () => {\n    history.push(\"/\");\n  };\n  console.log(\"boads 게시글 받아옴??\", boards);\n  return (\n    <div>\n      <Container>\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <td>\n                <Row>\n                  <Col xs={6} md={1}>\n                    제목\n                  </Col>\n                  <Col xs={6} md={9}>\n                    \"(예시)국제부 기자가 들려주는 오사카성 투어\"\n                    <br />\n                    빌드중...(data.result[0].title)\n                  </Col>\n                  <Col xs={6} md={2}>\n                    작성일\n                  </Col>\n                </Row>\n              </td>\n            </tr>\n          </thead>\n        </Table>\n      </Container>\n      <Container>\n        <Table striped bordered hover>\n          <Row>\n            <Col xs={6} md={1} />\n            <Col xs={6} md={9}>\n              \"국제부 기자가 들려주는 오사카성 투어\"\n              <br />\n              빌드중...(data.result[0].title)\n            </Col>\n            <Col xs={6} md={4} />\n          </Row>\n        </Table>\n      </Container>\n      <button onClick={homeButton}>목록</button>\n    </div>\n  );\n};\n\nexport default Board;\n","import React, { useState } from \"react\";\n\nimport Nav from \"./Nav\";\nimport BoardList from \"./BoardList\";\nimport Board from \"./Board\";\n\nconst BoardHome = () => {\n  const [boards, setbBoards] = useState([]);\n  // console.log(\"app에서 사용하네\", boards);\n\n  return (\n    <div className=\"App\">\n      <Nav setbBoards={setbBoards} />\n      <BoardList boards={boards} setbBoards={setbBoards} />\n    </div>\n  );\n};\n\nexport default BoardHome;\n","import React from \"react\";\nimport \"./App.css\";\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport BoardHome from \"./component/BoardHome\";\nimport Board from \"./component/Board\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={BoardHome} />\n          <Route path=\"/board\" component={Board} />\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}