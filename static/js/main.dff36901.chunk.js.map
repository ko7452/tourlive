{"version":3,"sources":["component/Search.js","component/Nav.js","component/BoardListEntry.js","component/BoardList.js","App.js","index.js"],"names":["Search","setbBoards","useState","search","setSearch","onSubmitHandleClick","e","a","console","log","preventDefault","fetch","method","then","res","json","data","results","catch","err","onSubmit","type","placeholder","value","onChange","target","Nav","BoardListEntry","boards","title","id","BoardList","useEffect","map","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAyDeA,G,KAlDA,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EACLC,mBAAS,IADJ,mBAC1BC,EAD0B,KAClBC,EADkB,KA4B3BC,EAAmB,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sDAC1BC,QAAQC,IAAI,uBAASN,GACrBG,EAAEI,iBArBFC,MAAM,yFAAD,OAsBMR,GApBT,CACES,OAAQ,QAGTC,MAAK,SAACC,GAEL,OADAN,QAAQC,IAAI,kBAAmBK,GACxBA,EAAIC,UAEZF,MAAK,SAACC,GACLN,QAAQC,IAAI,iCAASK,EAAIE,KAAKC,SAC9BhB,EAAWa,EAAIE,KAAKC,YAErBC,OAAM,SAACC,GACNX,QAAQC,IAAI,MAAOU,MAIG,2CAAH,sDAOzB,OACE,0BAAMC,SAAUf,GACd,6BACE,2BACEgB,KAAK,OACLC,YAAY,0DACZC,MAAOpB,EACPqB,SAvCkB,SAAClB,GAEzBF,EAAUE,EAAEmB,OAAOF,UAuCf,2BAAOF,KAAK,SAASE,MAAM,qBCvCpBG,EARH,SAAC,GAAD,IAAGzB,EAAH,EAAGA,WAAH,OACV,6BACE,6BACE,kBAAC,EAAD,CAAQA,WAAYA,OCOX0B,EAZQ,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAExB,OADApB,QAAQC,IAAI,8CAAYmB,EAAOC,OAE7B,6BACE,6BACGD,EAAOE,GACPF,EAAOC,SCsEDE,EAvEG,SAAC,GAA4B,IAA1BH,EAAyB,EAAzBA,OAAQ3B,EAAiB,EAAjBA,WA6B3B,OANA+B,qBAAU,WAnBRrB,MAAM,iFAEJ,CACEC,OAAQ,QAGTC,MAAK,SAACC,GACL,OAAOA,EAAIC,UAEZF,MAAK,SAACC,GACLN,QAAQC,IAAI,yCAAYK,EAAIE,KAAKC,SACjChB,EAAWa,EAAIE,KAAKC,SACpBT,QAAQC,IAAI,yCAAiBmB,MAE9BV,OAAM,SAACC,GACNX,QAAQC,IAAI,MAAOU,MAMvBX,QAAQC,IAAI,oBAAqBmB,KAChC,IACHpB,QAAQC,IAAI,eAAgBmB,GAG1B,6BACGA,EAAOK,KAAI,SAACL,GAAD,OACV,kBAAC,EAAD,CAAgBA,OAAQA,SCrBjBM,EAZH,WAAO,IAAD,EACahC,mBAAS,IADtB,mBACT0B,EADS,KACD3B,EADC,KAIhB,OAFAO,QAAQC,IAAI,2CAAcmB,GAGxB,yBAAKO,UAAU,OACb,kBAAC,EAAD,CAAKlC,WAAYA,IACjB,kBAAC,EAAD,CAAW2B,OAAQA,EAAQ3B,WAAYA,MCR7CmC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.dff36901.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport { searchTour } from \"../searchTour\";\n\n// 검색 기능\n// 주제별 검색 기능\n// 총 몇건의 게시글을 표시\nconst Search = ({ setbBoards }) => {\n  const [search, setSearch] = useState(\"\");\n\n  const searchHandleClick = (e) => {\n    // console.log(\"search word\", search);\n    setSearch(e.target.value);\n  };\n\n  const searchTour = (key) => {\n    fetch(\n      `http://tourlive-code-test-1586978259.ap-northeast-2.elb.amazonaws.com/v1/tours?search=${key}`,\n      {\n        method: \"GET\",\n      }\n    )\n      .then((res) => {\n        console.log(\"response search\", res);\n        return res.json();\n      })\n      .then((res) => {\n        console.log(\"검색데이터\", res.data.results);\n        setbBoards(res.data.results);\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n      });\n  };\n\n  const onSubmitHandleClick = async (e) => {\n    console.log(\"검색어: \", search);\n    e.preventDefault();\n    searchTour(search);\n    // await setbBoards(searchTour(\"스페인\"));\n  };\n\n  return (\n    <form onSubmit={onSubmitHandleClick}>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"검색어를 입력하세요\"\n          value={search}\n          onChange={searchHandleClick}\n        />\n        <input type=\"submit\" value=\"검색\" />\n      </div>\n    </form>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\n\nimport Search from \"./Search\";\n\nconst Nav = ({ setbBoards }) => (\n  <nav>\n    <div>\n      <Search setbBoards={setbBoards} />\n    </div>\n  </nav>\n);\n\nexport default Nav;\n","import React from \"react\";\n\nconst BoardListEntry = ({ boards }) => {\n  console.log(\"엔트리 왔다갔다\", boards.title);\n  return (\n    <div>\n      <div>\n        {boards.id}\n        {boards.title}\n      </div>\n    </div>\n  );\n};\n\nexport default BoardListEntry;\n\n//   const boardList = boards.map((data) => (\n//     <li key={data.results}>{data.results}</li>\n// return <ul>{boardList}</ul>;\n//   ));\n","import React, { useState, useEffect } from \"react\";\n\nimport BoardListEntry from \"./BoardListEntry\";\nimport { searchBoard } from \"../searchTour\";\n\n// 게시판 글 나열, map을 활용하여 뿌려주기\n// 게시글 상단 표시: 번호 / 제목 / 첨부파일 / 작성일 / 조회수\nconst BoardList = ({ boards, setbBoards }) => {\n  // const [boards, setbBoards] = useState([]);\n\n  const searchBoard = () => {\n    fetch(\n      `http://tourlive-code-test-1586978259.ap-northeast-2.elb.amazonaws.com/v1/tours`,\n      {\n        method: \"GET\",\n      }\n    )\n      .then((res) => {\n        return res.json();\n      })\n      .then((res) => {\n        console.log(\"이거 뭐나오지?\", res.data.results);\n        setbBoards(res.data.results);\n        console.log(\"boards 이거 다른거\", boards);\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n      });\n  };\n\n  useEffect(() => {\n    searchBoard();\n    console.log(\"sdfjdghdzjghzjhg.\", boards);\n  }, []);\n  console.log(\"sdf234234234\", boards);\n\n  return (\n    <div>\n      {boards.map((boards) => (\n        <BoardListEntry boards={boards} />\n      ))}\n    </div>\n  );\n};\n// const fetchInitialData = async () => {\n//   const initialData = await searchBoard();\n//   setbBoards(initialData);\n//   console.log(\"initialData\", searchBoard());\n//   console.log(\"fetchInitialData\");\n// };\n/*\n// useEffect에 비동기를 적용하고, 데이터를 완전히 받오면 상태를 변경\n  // 리렌더 발생하게 리팩토링\n  useEffect(async () => {\n    try {\n      const initialData = await searchBoard();\n      console.log(\"새로운 내용이 렌더링\");\n      setbBoards(initialData);\n    } catch (err) {\n      console.log(err);\n    }\n  }, []);\n*/\n\n/*\n{searchAPI() === undefined ? <div>없음<div> : </div>searchAPI().results.map((title) => {\n          return <BoardListEntry key={title} />\n        })}\n*/\n/*\n{lists.map((list) => (\n        <BoardListEntry\n          key={list}\n          video={list}\n          handleVideoListEntryTitleClick={handleBoardListEntryTitleClick}\n        />\n      ))}\n*/\nexport default BoardList;\n\n// const TOUR_URL = \"http://tourlive-code-test-1586978259.ap-northeast-2.elb.amazonaws.com/v2/tours\";\n// const url = `http://${process.env.REACT_APP_SERVER_HOST}:${process.env.REACT_APP_SERVER_PORT}/v2/tours`\n\n/*\nhost: http://tourlive-code-test-1586978259.ap-northeast-2.elb.amazonaws.com\nAPI URL: /v2/tours\nEX URL: http://tourlive-code-test-1586978259.ap-northeast-2.elb.amazonaws.com/v2/tours\nAction Type: List, Retreive\nAllowed Method: GET\nNot Allow Method: POST, PATCH, PUT, DELETE\n*/\n\n/*\n* Query parameters\nsearch: 검색 (text)\nordering: 정렬 (text)\npage_size: 페이지 사이즈 (int)\ncursor:  hash 커서 (text)\n*/\n\n/*\n* curl example (리스트 * List)\ncurl http://tourlive-code-test-1586978259.ap-northeast-2.elb.amazonaws.com/v2/tours\ncurl http://tourlive-code-test-1586978259.ap-northeast-2.elb.amazonaws.com/v2/tours?search=일본\ncurl http://tourlive-code-test-1586978259.ap-northeast-2.elb.amazonaws.com/v2/tours?search=오키나와\ncurl http://tourlive-code-test-1586978259.ap-northeast-2.elb.amazonaws.com/v2/tours?ordering=-created_at\ncurl http://tourlive-code-test-1586978259.ap-northeast-2.elb.amazonaws.com/v2/tours?cursor=cD0yMDIwLTA5LTE0KzA0JTNBNTclM0ExMCUyQjAwJTNBMDA%3D\n*/\n\n/*\n* curl example (상세 * Detail)\ncurl http://tourlive-code-test-1586978259.ap-northeast-2.elb.amazonaws.com/v2/tours/1\n*/\n","import React, { useState } from \"react\";\nimport \"./App.css\";\n\nimport Nav from \"./component/Nav\";\nimport BoardList from \"./component/BoardList\";\n\nconst App = () => {\n  const [boards, setbBoards] = useState([]);\n  console.log(\"app에서 사용하네\", boards);\n\n  return (\n    <div className=\"App\">\n      <Nav setbBoards={setbBoards} />\n      <BoardList boards={boards} setbBoards={setbBoards} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}